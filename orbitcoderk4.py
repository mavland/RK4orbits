# -*- coding: utf-8 -*-
"""OrbitCodeRK4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N-gYwbN1ifptQTvuMdpEDUH0E1vxsaHh
"""

import numpy as np
import matplotlib.pyplot as plt


#Defining constant mu 
mu = 0.012277471
muh = 1-mu

#Defining equations of motion for orbit

def fxn(x,u):
  u1 = u[0]
  u2 = u[1]
  a = u[2]
  b = u [3]

  D1 = pow(pow((u1+mu),2)+pow(u2,2),(3/2))
  D2 = pow(pow((u1-muh),2)+pow(u2,2),(3/2))



  c = u1 + 2*b - (muh*((u1+mu)/D1))-(mu*((u1-muh)/D2))

  d = u2 - 2*a - (muh*((u2)/D1))-(mu*((u2)/D2))


  r = np.array([(a),(b),(c),(d)])
  return r


#defining step size, RK4 integration

xf = 17.1

h = xf/6000
x = 0
u = np.array([0.994,0,0,-2.00158510637908252240537862224])

uhold = []
uhold.append(u)
xhold = []
xhold.append(x)
x+=h

while x<=20:

  k1 = h*fxn(x,u)
  k2 = h*fxn(x+(1/2)*h,u+(1/2)*k1)
  k3 = h*fxn(x+(1/2)*h,u+(1/2)*k2)
  k4 = h*fxn(x+h,u+k3)

  unp = u + (1/6)*(k1+2*k2+2*k3+k4)
  uhold.append(unp)
  xhold.append(x)
  u = unp
  x+=h


inp = input('Number of steps?')


xf = 17.1

h = xf/int(inp)
x = 0
u = np.array([0.994,0,0,-2.00158510637908252240537862224])

uhold = []
uhold.append(u)
xhold = []
xhold.append(x)
x+=h

while x<=20:

  k1 = h*fxn(x,u)
  k2 = h*fxn(x+(1/2)*h,u+(1/2)*k1)
  k3 = h*fxn(x+(1/2)*h,u+(1/2)*k2)
  k4 = h*fxn(x+h,u+k3)

  unp = u + (1/6)*(k1+2*k2+2*k3+k4)
  uhold.append(unp)
  xhold.append(x)
  u = unp
  x+=h

uhold2 = np.array(uhold).T

fig = plt.figure(figsize=(15,5),frameon=False)

ax1 = plt.subplot(1,2,1)

ax1.plot(uhold2[0],uhold2[1])
ax1.set_xlabel('u1')
ax1.set_ylabel('u2')
str_1 = "0rbit, "+ str(inp) + " steps"

ax1.set_title(str_1)